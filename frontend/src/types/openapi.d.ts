/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/bookmarks/": {
    /** Get Bookmarks */
    get: operations["get_bookmarks_bookmarks__get"];
    /** Create Bookmark */
    post: operations["create_bookmark_bookmarks__post"];
  };
  "/bookmarks/{bookmark_id}": {
    /** Get Bookmark By Id */
    get: operations["get_bookmark_by_id_bookmarks__bookmark_id__get"];
    /** Update Bookmark */
    put: operations["update_bookmark_bookmarks__bookmark_id__put"];
    /** Delete Bookmark */
    delete: operations["delete_bookmark_bookmarks__bookmark_id__delete"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** BookmarkCreate */
    BookmarkCreate: {
      /** Name */
      name: string;
      media_type: components["schemas"]["MediaType"];
      /** Bookmark */
      bookmark: (number | string)[];
    };
    /** BookmarkOut */
    BookmarkOut: {
      /** Name */
      name: string;
      media_type: components["schemas"]["MediaType"];
      /** Bookmark */
      bookmark: (number | string)[];
      /** Id */
      id: number;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /**
     * MediaType
     * @enum {string}
     */
    MediaType: "podcast" | "tv_show" | "book" | "other";
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Get Bookmarks */
  get_bookmarks_bookmarks__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BookmarkOut"][];
        };
      };
    };
  };
  /** Create Bookmark */
  create_bookmark_bookmarks__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["BookmarkCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["BookmarkOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Bookmark By Id */
  get_bookmark_by_id_bookmarks__bookmark_id__get: {
    parameters: {
      path: {
        bookmark_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BookmarkOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Bookmark */
  update_bookmark_bookmarks__bookmark_id__put: {
    parameters: {
      path: {
        bookmark_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BookmarkCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BookmarkOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Bookmark */
  delete_bookmark_bookmarks__bookmark_id__delete: {
    parameters: {
      path: {
        bookmark_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
